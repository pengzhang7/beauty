CREATE TABLE BEAUTY_USER
(
    USER_ID INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    USER_NAME VARCHAR(50) NOT NULL COMMENT '用户名称',
    USER_SEX ENUM('0', '1') DEFAULT '0' NOT NULL COMMENT '用户性别，0:女，1:男',
    USER_TEL VARCHAR(11) NOT NULL COMMENT '用户电话',
    USER_WECHAT VARCHAR(20) COMMENT '用户微信',
    USER_REGIST_STORE VARCHAR(40) NOT NULL COMMENT '用户注册的门店',
    USER_EMPLOYEE ENUM('0', '1') DEFAULT '0' NOT NULL COMMENT '该用户是否是雇员，0:否，1:是',
    USER_ADDR VARCHAR(300) COMMENT '用户住址',
    REGIST_TIME DATETIME NOT NULL
);
CREATE TABLE BEAUTY_POSITION
(
    POSITION_ID INT(11) PRIMARY KEY NOT NULL COMMENT '职位表id' AUTO_INCREMENT,
    POSITION_NAME VARCHAR(100) NOT NULL COMMENT '职位名称',
    CREATE_TIME DATETIME NOT NULL,
    UPDATE_TIME DATETIME NOT NULL
);
CREATE TABLE BEAUTY_USER_POSITION_RELATION
(
    ID INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    USER_ID INT(11) NOT NULL COMMENT '雇员id，对应用户职员表id',
    POSITION_ID INT(11) NOT NULL COMMENT '职位id，对应职位表id'
);
CREATE TABLE BEAUTY_CONSUMER_RECORD
(
    RECORD_ID INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    USER_ID INT(11) NOT NULL COMMENT '用户表id',
    SHOP_ID INT(11) NOT NULL COMMENT '消费门店id',
    CONSUMER_AMOUNT FLOAT NOT NULL COMMENT '消费金额',
    CONSUMER_TYPE ENUM('0', '1', '2') DEFAULT '0' NOT NULL COMMENT '消费类型：0:项目消费，1:购买商品，2:充值或购卡',
    CONSUMER_FREE_MONEY FLOAT DEFAULT '0' COMMENT '免单金额',
    CNSUMER_TIME DATETIME NOT NULL
);
CREATE TABLE BEAUTY_CARD
(
    CARD_ID INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    CARD_NAME VARCHAR(200) NOT NULL COMMENT '卡名称',
    CARD_CREATE_TIME DATETIME NOT NULL COMMENT '分类创建时间',
    CARD_UPDATE_TIME DATETIME COMMENT '分类修改时间'
);
CREATE TABLE BEAUTY_PROJECT
(
    PROJECT_ID INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    PROJECT_NAME VARCHAR(100) NOT NULL COMMENT '项目名称',
    PROJECT_PARENT_ID INT(11) COMMENT '父项目id',
    PROJEC_CREATE_TIME DATETIME NOT NULL COMMENT '创建时间',
    PROJECT_UPDATE_TIME DATETIME COMMENT '修改时间'
);
CREATE TABLE BEAUTY_CARD_PROJECT
(
    CARD_PROJECT_ID INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    CARD_ID INT(11) NOT NULL COMMENT '卡id',
    PROJECT_ID INT(11) COMMENT '父项目id，子项目包含在父项目中，不单独纪录',
    CREATE_TIME DATETIME NOT NULL,
    UPDATE_TIME DATETIME
);
CREATE TABLE BEAUTY_USER_CARD
(
    ID INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    USER_ID INT(11) NOT NULL COMMENT '用户id',
    CARD_ID INT(11) NOT NULL COMMENT '卡id',
    CARD_MONEY FLOAT DEFAULT '0' NOT NULL COMMENT '卡上余额，若卡为疗程卡等次卡，该字段值为0',
    CARD_TIMES INT(11) DEFAULT '0' NOT NULL COMMENT '卡上剩余服务次数，用于疗程卡等次卡，若为充值卡，则该字段为0',
    CREATE_TIME DATETIME NOT NULL,
    CARD_STATUE ENUM('0', '1', '2') DEFAULT '0' NOT NULL COMMENT '卡的状态：0:未激活，1:激活。2:过期',
    CARD_ARREARS FLOAT DEFAULT '0' NOT NULL COMMENT '用户购卡欠款，欠款大于0时，不能修改卡的状态至激活或过期',
    CARD_DISCOUNT FLOAT(2,2) NOT NULL COMMENT '储值卡消费时的折扣'
);
CREATE TABLE BEAUTY_CONSUMER_RECORD_DETAIL
(
    DETAIL_ID INT(11) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    RECORD_ID INT(11) NOT NULL COMMENT '消费记录id',
    USER_ID INT(11) NOT NULL COMMENT '用户id',
    PROJECT_ID INT(11) NOT NULL COMMENT '用户消费项目id（只记录子项目id，其归属的父项目不记录）',
    ARTIFICER_ID INT(11) NOT NULL COMMENT '技师id',
    ARTIFICER_MONEY FLOAT NOT NULL COMMENT '技师手工',
    CONSUMER_MONEY FLOAT NOT NULL COMMENT '消费金额（包括技师手工）',
    CONSUMER_MODE VARCHAR(10) NOT NULL COMMENT '付款方式：0:商品卡，1:现金，2:积分，3:刷卡，4:免单，一个项目支持同时多个付款方式,多个付款方式之间以英文逗号分隔',
    CONSUMER_TIME DATETIME NOT NULL
);
ALTER TABLE BEAUTY_USER_POSITION_RELATION ADD FOREIGN KEY (USER_ID) REFERENCES BEAUTY_USER (USER_ID);
ALTER TABLE BEAUTY_USER_POSITION_RELATION ADD FOREIGN KEY (POSITION_ID) REFERENCES BEAUTY_POSITION (POSITION_ID);
CREATE INDEX BEAUTY_USER_POSITION_RELATION_BEAUTY_POSITION_POSITION_ID_fk ON BEAUTY_USER_POSITION_RELATION (POSITION_ID);
CREATE INDEX BEAUTY_USER_POSITION_RELATION_BEAUTY_USER_USER_ID_fk ON BEAUTY_USER_POSITION_RELATION (USER_ID);
ALTER TABLE BEAUTY_CONSUMER_RECORD ADD FOREIGN KEY (USER_ID) REFERENCES BEAUTY_USER (USER_ID);
CREATE INDEX BEAUTY_CONSUMER_RECORD_BEAUTY_USER_USER_ID_fk ON BEAUTY_CONSUMER_RECORD (USER_ID);
ALTER TABLE BEAUTY_CARD_PROJECT ADD FOREIGN KEY (CARD_ID) REFERENCES BEAUTY_CARD (CARD_ID);
ALTER TABLE BEAUTY_CARD_PROJECT ADD FOREIGN KEY (PROJECT_ID) REFERENCES BEAUTY_PROJECT (PROJECT_ID);
CREATE INDEX BEAUTY_CARD_PROJECT_BEAUTY_CARD_CARD_ID_fk ON BEAUTY_CARD_PROJECT (CARD_ID);
CREATE INDEX BEAUTY_CARD_PROJECT_BEAUTY_PROJECT_PROJECT_ID_fk ON BEAUTY_CARD_PROJECT (PROJECT_ID);
ALTER TABLE BEAUTY_USER_CARD ADD FOREIGN KEY (USER_ID) REFERENCES BEAUTY_USER (USER_ID);
ALTER TABLE BEAUTY_USER_CARD ADD FOREIGN KEY (CARD_ID) REFERENCES BEAUTY_CARD (CARD_ID);
CREATE INDEX BEAUTY_USER_CARD_BEAUTY_CARD_CARD_ID_fk ON BEAUTY_USER_CARD (CARD_ID);
CREATE INDEX BEAUTY_USER_CARD_BEAUTY_USER_USER_ID_fk ON BEAUTY_USER_CARD (USER_ID);
ALTER TABLE BEAUTY_CONSUMER_RECORD_DETAIL ADD FOREIGN KEY (RECORD_ID) REFERENCES BEAUTY_CONSUMER_RECORD (RECORD_ID);
ALTER TABLE BEAUTY_CONSUMER_RECORD_DETAIL ADD FOREIGN KEY (USER_ID) REFERENCES BEAUTY_USER (USER_ID);
ALTER TABLE BEAUTY_CONSUMER_RECORD_DETAIL ADD FOREIGN KEY (PROJECT_ID) REFERENCES BEAUTY_PROJECT (PROJECT_ID);
ALTER TABLE BEAUTY_CONSUMER_RECORD_DETAIL ADD FOREIGN KEY (ARTIFICER_ID) REFERENCES BEAUTY_USER (USER_ID);
CREATE INDEX BEAUTY_CONSUMER_RECORD_DETAIL_BEAUTY_PROJECT_PROJECT_ID_fk ON BEAUTY_CONSUMER_RECORD_DETAIL (PROJECT_ID);
CREATE INDEX BEAUTY_CONSUMER_RECORD_DETAIL_BEAUTY_USER_USER_ID_fk ON BEAUTY_CONSUMER_RECORD_DETAIL (ARTIFICER_ID);
CREATE INDEX BEAUTY_CONSUMER_RECORD_DETAIL_CONSUMER_RECORD_RECORD_ID_fk ON BEAUTY_CONSUMER_RECORD_DETAIL (RECORD_ID);
CREATE INDEX BEAUTY_CONSUMER_RECORD_DETAIL_CUSTOMER_BEAUTY_USER_USER_ID_fk ON BEAUTY_CONSUMER_RECORD_DETAIL (USER_ID);